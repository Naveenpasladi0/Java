- - Input Output Notes
Input/Output (I/O) in Java is essential for interacting with the external world, such as reading from and writing to files, the console, or network sockets. Java provides a rich set of I/O classes in the java.io package. Here are some common I/O operations with examples.

1. Console I/O
- Reading from the Console
To read input from the console, you can use the Scanner class:
- Writing to the Console
To write output to the console, you can use System.out.print or System.out.println:

2. File I/O
- Reading from a File
You can read from a file using classes like FileReader and BufferedReader:
- Writing to a File
You can write to a file using classes like FileWriter and BufferedWriter:

3. Byte Streams
- Reading from a File using Byte Streams
Use FileInputStream for reading binary data:
- Writing to a File using Byte Streams
Use FileOutputStream for writing binary data:

4. Object Serialization
- Writing Objects to a File
Use ObjectOutputStream to serialize objects:
- Reading Objects from a File
Use ObjectInputStream to deserialize objects:

- - Summary
- Console I/O: Using Scanner for input and System.out for output.
- File I/O: Using FileReader, BufferedReader for reading and FileWriter, BufferedWriter for writing.
- Byte Streams: Using FileInputStream and FileOutputStream for reading and writing binary data.
- Object Serialization: Using ObjectOutputStream and ObjectInputStream to write and read objects.
These examples should give you a good understanding of how to perform basic I/O operations in Java.

